<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Cloud on Robin's blog</title><link>https://kaveland.no/tags/cloud/</link><description>Recent content in Cloud on Robin's blog</description><generator>Hugo -- 0.145.0</generator><language>en-us</language><lastBuildDate>Wed, 14 May 2025 18:00:00 +0000</lastBuildDate><atom:link href="https://kaveland.no/tags/cloud/index.xml" rel="self" type="application/rss+xml"/><item><title>No-ops linux part 3: It puts the data in the pond. Nightly.</title><link>https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p3/</link><pubDate>Wed, 14 May 2025 18:00:00 +0000</pubDate><guid>https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p3/</guid><description>&lt;p>This post is part of the series on no-ops linux deployment. The &lt;a href="https://kaveland.no/posts/2025-05-13-fire-and-forget-linux-p1">first post&lt;/a> covered local development of linux server configuration and essential configuration. The &lt;a href="https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p2">previous installment&lt;/a> covers a janky podman installation and configures a reverse proxy to send traffic to a simple container deployment. This is the &lt;a href="https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p3">final post&lt;/a>. It covers a more challenging deployment with jobs and rolling restarts, and discusses the strengths and weaknesses of this approach to hosting.&lt;/p>
&lt;p>After the previous post, we know how to deploy a container that requires absolutely no configuration and restarts almost instantly. Most of the applications I work on in my daytime job aren&amp;rsquo;t like that. Let&amp;rsquo;s take a look at a more complex example.&lt;/p></description></item><item><title>No-ops linux part 2: Hosting a simple container on a lean mean systemd machine</title><link>https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p2/</link><pubDate>Wed, 14 May 2025 00:00:00 +0000</pubDate><guid>https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p2/</guid><description>&lt;p>This post is part of the series on no-ops linux deployment. The &lt;a href="https://kaveland.no/posts/2025-05-13-fire-and-forget-linux-p1">previous post&lt;/a> covered local development of linux server configuration and essential configuration. &lt;a href="https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p2">This installment&lt;/a> covers a janky podman installation and configures a reverse proxy to send traffic to a simple container deployment. The &lt;a href="https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p3">final post&lt;/a> covers a more challenging deployment with jobs and rolling restarts, and discusses the strengths and weaknesses of this approach to hosting.&lt;/p>
&lt;p>At the completion of the previous post, we had automatic installation of a functional Ubuntu server with the bare essentials installed. We did this by writing a &lt;code>base-install&lt;/code> ansible role. There&amp;rsquo;s still a missing ingredient before we can start deploying containers, though!&lt;/p></description></item><item><title>No-ops Linux part 1: Automation, security and essentials</title><link>https://kaveland.no/posts/2025-05-13-fire-and-forget-linux-p1/</link><pubDate>Tue, 13 May 2025 00:00:00 +0000</pubDate><guid>https://kaveland.no/posts/2025-05-13-fire-and-forget-linux-p1/</guid><description>&lt;p>In &lt;a href="https://kaveland.no/posts/2025-04-14-running-containers-on-the-cheap">Running containers on no-ops linux in 2025&lt;/a> I wrote about moving my hobby projects to a European cloud provider. I did an initial, manual setup in &lt;a href="https://www.hetzner.com/">Hetzner&lt;/a>, which I&amp;rsquo;ve now automated. This weekend, I tested the setup. It takes me a few minutes now to get everything moved to a new host, and most of that has to do with DNS. I&amp;rsquo;ve got a reproducible setup, I can quickly provision up a machine locally or in any cloud that has Ubuntu 24.04. Reproducible infrastructure is ✨liberating✨&lt;/p></description></item><item><title>Deploying to BunnyCDN and protecting Norway from drop bears</title><link>https://kaveland.no/posts/2025-04-20-deploying-to-bunnycdn/</link><pubDate>Sun, 20 Apr 2025 00:00:00 +0000</pubDate><guid>https://kaveland.no/posts/2025-04-20-deploying-to-bunnycdn/</guid><description>&lt;p>Not long ago, I wrote about &lt;a href="https://kaveland.no/posts/2025-04-14-running-containers-on-the-cheap">running containers&lt;/a> as part of moving my hobby projects to European cloud providers. That post was focused on running good old Linux servers. I briefly mentioned &lt;a href="https://bunny.net">BunnyCDN&lt;/a> but didn’t dive into the details. It&amp;rsquo;s time to dive into the details!&lt;/p>
&lt;h2 id="what-the-flark-is-a-cdn">What the flark is a CDN?&lt;/h2>
&lt;p>A &lt;a href="https://en.wikipedia.org/wiki/Content_delivery_network">content delivery network&lt;/a> is a geographically distributed network of servers that can deliver content to your users, close to where they are. It&amp;rsquo;s useful, because the speed of light isn&amp;rsquo;t fast enough to make pages load quickly across the other side of the globe. Seriously, the fastest thing in the universe cannot deliver cat pictures to people quickly enough. By using a CDN, you can geographically distribute assets like cat pictures, HTML, CSS, JavaScript, video files, fonts and much more.&lt;/p></description></item><item><title>Running containers on no-ops linux in 2025</title><link>https://kaveland.no/posts/2025-04-14-running-containers-on-the-cheap/</link><pubDate>Mon, 14 Apr 2025 00:00:00 +0000</pubDate><guid>https://kaveland.no/posts/2025-04-14-running-containers-on-the-cheap/</guid><description>&lt;p>Back in February, I decided that I wanted to move hosting of my hobby projects to a european cloud provider. At this time, I don&amp;rsquo;t feel like spending more energy on why, but maybe someone can learn something from the how. I have pretty simple requirements, so I figured I should be able to find simple and inexpensive hosting too. It turns out that there are many european cloud providers in 2025, but none that were really a &lt;em>perfect&lt;/em> fit for what I was looking for. Here&amp;rsquo;s what I wanted:&lt;/p></description></item></channel></rss>