<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Caddy on Robin's blog</title><link>https://kaveland.no/tags/caddy/</link><description>Recent content in Caddy on Robin's blog</description><generator>Hugo -- 0.145.0</generator><language>en-us</language><lastBuildDate>Wed, 14 May 2025 18:00:00 +0000</lastBuildDate><atom:link href="https://kaveland.no/tags/caddy/index.xml" rel="self" type="application/rss+xml"/><item><title>No-ops linux part 3: It puts the data in the pond. Nightly.</title><link>https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p3/</link><pubDate>Wed, 14 May 2025 18:00:00 +0000</pubDate><guid>https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p3/</guid><description>&lt;p>This post is part of the series on no-ops linux deployment. The &lt;a href="https://kaveland.no/posts/2025-05-13-fire-and-forget-linux-p1">first post&lt;/a> covered local development of linux server configuration and essential configuration. The &lt;a href="https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p2">previous installment&lt;/a> covers a janky podman installation and configures a reverse proxy to send traffic to a simple container deployment. This is the &lt;a href="https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p3">final post&lt;/a>. It covers a more challenging deployment with jobs and rolling restarts, and discusses the strengths and weaknesses of this approach to hosting.&lt;/p>
&lt;p>After the previous post, we know how to deploy a container that requires absolutely no configuration and restarts almost instantly. Most of the applications I work on in my daytime job aren&amp;rsquo;t like that. Let&amp;rsquo;s take a look at a more complex example.&lt;/p></description></item><item><title>No-ops linux part 2: Hosting a simple container on a lean mean systemd machine</title><link>https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p2/</link><pubDate>Wed, 14 May 2025 00:00:00 +0000</pubDate><guid>https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p2/</guid><description>&lt;p>This post is part of the series on no-ops linux deployment. The &lt;a href="https://kaveland.no/posts/2025-05-13-fire-and-forget-linux-p1">previous post&lt;/a> covered local development of linux server configuration and essential configuration. &lt;a href="https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p2">This installment&lt;/a> covers a janky podman installation and configures a reverse proxy to send traffic to a simple container deployment. The &lt;a href="https://kaveland.no/posts/2025-05-14-fire-and-forget-linux-p3">final post&lt;/a> covers a more challenging deployment with jobs and rolling restarts, and discusses the strengths and weaknesses of this approach to hosting.&lt;/p>
&lt;p>At the completion of the previous post, we had automatic installation of a functional Ubuntu server with the bare essentials installed. We did this by writing a &lt;code>base-install&lt;/code> ansible role. There&amp;rsquo;s still a missing ingredient before we can start deploying containers, though!&lt;/p></description></item><item><title>No-ops Linux part 1: Automation, security and essentials</title><link>https://kaveland.no/posts/2025-05-13-fire-and-forget-linux-p1/</link><pubDate>Tue, 13 May 2025 00:00:00 +0000</pubDate><guid>https://kaveland.no/posts/2025-05-13-fire-and-forget-linux-p1/</guid><description>&lt;p>In &lt;a href="https://kaveland.no/posts/2025-04-14-running-containers-on-the-cheap">Running containers on no-ops linux in 2025&lt;/a> I wrote about moving my hobby projects to a European cloud provider. I did an initial, manual setup in &lt;a href="https://www.hetzner.com/">Hetzner&lt;/a>, which I&amp;rsquo;ve now automated. This weekend, I tested the setup. It takes me a few minutes now to get everything moved to a new host, and most of that has to do with DNS. I&amp;rsquo;ve got a reproducible setup, I can quickly provision up a machine locally or in any cloud that has Ubuntu 24.04. Reproducible infrastructure is ✨liberating✨&lt;/p></description></item></channel></rss>